/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * A flight ticket entity
 * @export
 * @interface FlightTicket
 */
export interface FlightTicket {
    /**
     * Unique identifier for the ticket
     * @type {number}
     * @memberof FlightTicket
     */
    id?: number;
    /**
     * Name of the passenger
     * @type {string}
     * @memberof FlightTicket
     */
    passengerName: string;
    /**
     * Departure location
     * @type {string}
     * @memberof FlightTicket
     */
    kickoffAddress: string;
    /**
     * Destination location
     * @type {string}
     * @memberof FlightTicket
     */
    destinationAddress: string;
    /**
     * Date of booking
     * @type {Date}
     * @memberof FlightTicket
     */
    bookingDate?: Date;
    /**
     * Timestamp when the ticket was created
     * @type {Date}
     * @memberof FlightTicket
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the FlightTicket interface.
 */
export function instanceOfFlightTicket(value: object): value is FlightTicket {
    if (!('passengerName' in value) || value['passengerName'] === undefined) return false;
    if (!('kickoffAddress' in value) || value['kickoffAddress'] === undefined) return false;
    if (!('destinationAddress' in value) || value['destinationAddress'] === undefined) return false;
    return true;
}

export function FlightTicketFromJSON(json: any): FlightTicket {
    return FlightTicketFromJSONTyped(json, false);
}

export function FlightTicketFromJSONTyped(json: any, ignoreDiscriminator: boolean): FlightTicket {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'passengerName': json['passengerName'],
        'kickoffAddress': json['kickoffAddress'],
        'destinationAddress': json['destinationAddress'],
        'bookingDate': json['bookingDate'] == null ? undefined : (new Date(json['bookingDate'])),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function FlightTicketToJSON(json: any): FlightTicket {
    return FlightTicketToJSONTyped(json, false);
}

export function FlightTicketToJSONTyped(value?: FlightTicket | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'passengerName': value['passengerName'],
        'kickoffAddress': value['kickoffAddress'],
        'destinationAddress': value['destinationAddress'],
        'bookingDate': value['bookingDate'] == null ? undefined : ((value['bookingDate']).toISOString().substring(0,10)),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

